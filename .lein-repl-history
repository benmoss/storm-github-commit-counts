(.getFile (clojure.java.io/resource "changelog.txt")
)
(.getFile (clojure.java.io/resource "changelog.txt"))
(.getPath (clojure.java.io/resource "changelog.txt"))
(clojure.java.io/resource "changelog.txt")
(slurp (clojure.java.io/resource "changelog.txt"))
(clojure.java.io/resource
)
clojure.java.io/resource
(let [{foo :foo} {:foo "bar"} (prn foo))
(let [{foo :foo} {:foo "bar"}] (prn foo))
(doc conj)
(conj {} :foo "bar")
(doc fnil)
(fnil inc 1)
((fnil inc 1) nil)
((fnil inc 0) nil)
((fnil inc 0) 1)
((fnil inc) 1)
(def a (atom {}))
#(swap! a #(assoc
(doc assoc)
(update-in {} [:foo] "bar")
(update-in {} [:foo] inc)
(update-in {} [:foo] (fnil inc 0))
(update-in {} :foo (fnil inc 0))
(let [[k, v] {:foo "bar" :baz "qux"}] (prn k))
(let [x {:foo "bar" :baz "qux"}] (prn k))
(let [x {:foo "bar" :baz "qux"}] (prn x))
(doc println)
(println "what" "the" "fuck")
(doc sleep)
